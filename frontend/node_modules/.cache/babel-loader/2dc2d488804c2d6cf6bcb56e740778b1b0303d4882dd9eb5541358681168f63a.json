{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\shrid\\\\Desktop\\\\mern-todo-app\\\\frontend\\\\src\\\\Todo.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = ({\n  todo,\n  toggleComplete,\n  deleteTodo,\n  editTodo\n}) => {\n  _s();\n  const [isEditing, setIsEditing] = useState(false);\n  const [newText, setNewText] = useState(todo.text);\n  const handleEdit = () => {\n    if (isEditing) {\n      editTodo(todo._id, newText);\n    }\n    setIsEditing(!isEditing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `todo-item ${todo.completed ? 'completed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: todo.completed,\n      onChange: () => toggleComplete(todo._id, todo.completed)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n      value: newText,\n      onChange: e => setNewText(e.target.value),\n      className: \"todo-text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"todo-text\",\n      children: todo.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        children: \"\\u270F\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => deleteTodo(todo._id),\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n_s(Todo, \"eZUix1xPGB4jfU40YWi+U7Y2RLs=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Todo","todo","toggleComplete","deleteTodo","editTodo","_s","isEditing","setIsEditing","newText","setNewText","text","handleEdit","_id","className","completed","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","e","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/shrid/Desktop/mern-todo-app/frontend/src/Todo.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst Todo = ({ todo, toggleComplete, deleteTodo, editTodo }) => {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [newText, setNewText] = useState(todo.text);\r\n\r\n  const handleEdit = () => {\r\n    if (isEditing) {\r\n      editTodo(todo._id, newText);\r\n    }\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  return (\r\n    <div className={`todo-item ${todo.completed ? 'completed' : ''}`}>\r\n      <input\r\n        type=\"checkbox\"\r\n        checked={todo.completed}\r\n        onChange={() => toggleComplete(todo._id, todo.completed)}\r\n      />\r\n      {isEditing ? (\r\n        <input\r\n          value={newText}\r\n          onChange={(e) => setNewText(e.target.value)}\r\n          className=\"todo-text\"\r\n        />\r\n      ) : (\r\n        <span className=\"todo-text\">{todo.text}</span>\r\n      )}\r\n      <div className=\"todo-buttons\">\r\n        <button onClick={handleEdit}>✏️</button>\r\n        <button onClick={() => deleteTodo(todo._id)}>❌</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,IAAI,GAAGA,CAAC;EAAEC,IAAI;EAAEC,cAAc;EAAEC,UAAU;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/D,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAACI,IAAI,CAACS,IAAI,CAAC;EAEjD,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAIL,SAAS,EAAE;MACbF,QAAQ,CAACH,IAAI,CAACW,GAAG,EAAEJ,OAAO,CAAC;IAC7B;IACAD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,oBACEP,OAAA;IAAKc,SAAS,EAAE,aAAaZ,IAAI,CAACa,SAAS,GAAG,WAAW,GAAG,EAAE,EAAG;IAAAC,QAAA,gBAC/DhB,OAAA;MACEiB,IAAI,EAAC,UAAU;MACfC,OAAO,EAAEhB,IAAI,CAACa,SAAU;MACxBI,QAAQ,EAAEA,CAAA,KAAMhB,cAAc,CAACD,IAAI,CAACW,GAAG,EAAEX,IAAI,CAACa,SAAS;IAAE;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1D,CAAC,EACDhB,SAAS,gBACRP,OAAA;MACEwB,KAAK,EAAEf,OAAQ;MACfU,QAAQ,EAAGM,CAAC,IAAKf,UAAU,CAACe,CAAC,CAACC,MAAM,CAACF,KAAK,CAAE;MAC5CV,SAAS,EAAC;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC,gBAEFvB,OAAA;MAAMc,SAAS,EAAC,WAAW;MAAAE,QAAA,EAAEd,IAAI,CAACS;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAC9C,eACDvB,OAAA;MAAKc,SAAS,EAAC,cAAc;MAAAE,QAAA,gBAC3BhB,OAAA;QAAQ2B,OAAO,EAAEf,UAAW;QAAAI,QAAA,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACxCvB,OAAA;QAAQ2B,OAAO,EAAEA,CAAA,KAAMvB,UAAU,CAACF,IAAI,CAACW,GAAG,CAAE;QAAAG,QAAA,EAAC;MAAC;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCIL,IAAI;AAAA2B,EAAA,GAAJ3B,IAAI;AAmCV,eAAeA,IAAI;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}